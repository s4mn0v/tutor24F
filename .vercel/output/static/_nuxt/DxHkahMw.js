import{r as e,K as t}from"./hFqZFfy7.js";class r extends Error{}function a(e){let t=e.replace(/-/g,"+").replace(/_/g,"/");switch(t.length%4){case 0:break;case 2:t+="==";break;case 3:t+="=";break;default:throw new Error("base64 string is not of the correct length")}try{return function(e){return decodeURIComponent(atob(e).replace(/(.)/g,((e,t)=>{let r=t.charCodeAt(0).toString(16).toUpperCase();return r.length<2&&(r="0"+r),"%"+r})))}(t)}catch(r){return atob(t)}}function o(e,t){if("string"!=typeof e)throw new r("Invalid token specified: must be a string");t||(t={});const o=!0===t.header?0:1,n=e.split(".")[o];if("string"!=typeof n)throw new r(`Invalid token specified: missing part #${o+1}`);let l;try{l=a(n)}catch(s){throw new r(`Invalid token specified: invalid base64 for part #${o+1} (${s.message})`)}try{return JSON.parse(l)}catch(s){throw new r(`Invalid token specified: invalid json for part #${o+1} (${s.message})`)}}r.prototype.name="InvalidTokenError";const n=()=>{const r=e(null),a=e(null),n=t(),l=()=>{r.value=null,a.value=null,localStorage.removeItem("token"),localStorage.removeItem("user"),n.push("/login")},s=e=>{switch(e){case"ADMIN":n.push("/admin");break;case"DOCENTE":n.push("/teacher");break;case"ESTUDIANTE":n.push("/student");break;default:n.push("/")}};return(()=>{{const e=localStorage.getItem("token"),t=localStorage.getItem("user");e&&t&&(a.value=e,r.value=JSON.parse(t))}})(),{user:r,token:a,login:async(e,t)=>{try{const n=await $fetch("/api/auth/login",{method:"POST",body:{email:e,password:t}}),l=o(n.token);return a.value=n.token,r.value={email:l.email,role:l.role,id:l.userId},localStorage.setItem("token",n.token),localStorage.setItem("user",JSON.stringify(r.value)),s(n.role),n}catch(n){throw n}},register:async(e,t,r,a,o,n)=>{try{return await $fetch("/api/auth/register",{method:"POST",body:{email:e,password:t,role:r,documentoIdentidad:a,nombre:o,telefono:n}})}catch(l){throw l}},logout:l,isAuthenticated:()=>!!a.value,getUserRole:()=>{var e;return null==(e=r.value)?void 0:e.role},refreshToken:async()=>{try{const e=await $fetch("/api/auth/refresh",{method:"POST",headers:{Authorization:`Bearer ${a.value}`}}),t=o(e.token);return a.value=e.token,r.value={email:t.email,role:t.role,id:t.userId},localStorage.setItem("token",e.token),localStorage.setItem("user",JSON.stringify(r.value)),e.token}catch(e){throw l(),e}}}};export{n as u};
