import{_ as e,f as a,h as t,o as l,i as u,P as r,Q as o,C as s,S as n,U as i,r as d,a3 as p,g as m,j as v,B as c,Y as f,Z as y,W as b,a6 as g,G as w}from"./y4QvXspP.js";import{u as h,t as x}from"./BsUv8T9A.js";import{u as j}from"./N1GbHz2C.js";import"./CGY6ERjo.js";import".prisma/client/index-browser";const B=n(b.ui.strategy,b.ui.textarea,x),z=a({inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},id:{type:String,default:null},name:{type:String,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},rows:{type:Number,default:3},maxrows:{type:Number,default:0},autoresize:{type:Boolean,default:!1},autofocus:{type:Boolean,default:!1},autofocusDelay:{type:Number,default:100},resize:{type:Boolean,default:!1},padded:{type:Boolean,default:!0},size:{type:String,default:null,validator:e=>Object.keys(B.size).includes(e)},color:{type:String,default:()=>B.default.color,validator:e=>[...b.ui.colors,...Object.keys(B.color)].includes(e)},variant:{type:String,default:()=>B.default.variant,validator:e=>[...Object.keys(B.variant),...Object.values(B.color).flatMap((e=>Object.keys(e)))].includes(e)},textareaClass:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},modelModifiers:{type:Object,default:()=>({})}},emits:["update:modelValue","blur","change"],setup(e,{emit:a}){const{ui:t,attrs:l}=h("textarea",i(e,"ui"),B,i(e,"class")),{emitFormBlur:u,emitFormInput:r,inputId:o,color:s,size:n,name:b}=j(e,B),x=d(p({},e.modelModifiers,{trim:!1,lazy:!1,number:!1,nullify:!1})),z=d(null),I=()=>{var a;e.autofocus&&(null==(a=z.value)||a.focus())},S=()=>{if(e.autoresize){if(!z.value)return;z.value.rows=e.rows;const a=z.value.style.overflow;z.value.style.overflow="hidden";const t=window.getComputedStyle(z.value),l=Number.parseInt(t.paddingTop)+Number.parseInt(t.paddingBottom),u=Number.parseInt(t.lineHeight),{scrollHeight:r}=z.value,o=(r-l)/u;o>e.rows&&(z.value.rows=e.maxrows?Math.min(o,e.maxrows):o),z.value.style.overflow=a}},C=e=>{x.value.trim&&(e=e.trim()),x.value.number&&(e=g(e)),x.value.nullify&&(e||(e=null)),a("update:modelValue",e),r()};m((()=>{setTimeout((()=>{I()}),e.autofocusDelay)})),v((()=>e.modelValue),(()=>{w(S)})),m((()=>{setTimeout((()=>{I(),S()}),100)}));const O=c((()=>{var a,l;const u=(null==(l=null==(a=t.value.color)?void 0:a[s.value])?void 0:l[e.variant])||t.value.variant[e.variant];return f(y(t.value.base,t.value.form,t.value.rounded,t.value.placeholder,t.value.size[n.value],e.padded?t.value.padding[n.value]:"p-0",null==u?void 0:u.replaceAll("{color}",s.value),!e.resize&&"resize-none"),e.textareaClass)}));return{ui:t,attrs:l,name:b,inputId:o,textarea:z,textareaClass:O,onInput:e=>{S(),x.value.lazy||C(e.target.value)},onChange:e=>{const t=e.target.value;a("change",t),x.value.lazy&&C(t),x.value.trim&&(e.target.value=t.trim())},onBlur:e=>{a("blur",e),u()}}}}),I=["id","value","name","rows","required","disabled","placeholder"];const S=e(z,[["render",function(e,a,n,i,d,p){return l(),t("div",{class:s(e.ui.wrapper)},[u("textarea",o({id:e.inputId,ref:"textarea",value:e.modelValue,name:e.name,rows:e.rows,required:e.required,disabled:e.disabled,placeholder:e.placeholder,class:e.textareaClass},e.attrs,{onInput:a[0]||(a[0]=(...a)=>e.onInput&&e.onInput(...a)),onBlur:a[1]||(a[1]=(...a)=>e.onBlur&&e.onBlur(...a)),onChange:a[2]||(a[2]=(...a)=>e.onChange&&e.onChange(...a))}),null,16,I),r(e.$slots,"default")],2)}]]);export{S as default};
