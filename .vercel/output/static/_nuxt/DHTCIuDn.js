import{f as e,U as d,B as r,$ as t,S as n,a0 as o,Y as a,Z as u,W as l}from"./y4QvXspP.js";import{u as s}from"./BsUv8T9A.js";import{u as i}from"./CcWMAPI5.js";import{b as c}from"./CHOj1P8S.js";import"./CGY6ERjo.js";import".prisma/client/index-browser";const p=n(l.ui.strategy,l.ui.button,c),m=n(l.ui.strategy,l.ui.buttonGroup,{wrapper:{horizontal:"inline-flex -space-x-px",vertical:"inline-flex flex-col -space-y-px"},rounded:"rounded-md",shadow:"shadow-sm",orientation:{"rounded-none":{horizontal:{start:"rounded-s-none",end:"rounded-e-none"},vertical:{start:"rounded-t-none",end:"rounded-b-none"}},"rounded-sm":{horizontal:{start:"rounded-s-sm",end:"rounded-e-sm"},vertical:{start:"rounded-t-sm",end:"rounded-b-sm"}},rounded:{horizontal:{start:"rounded-s",end:"rounded-e"},vertical:{start:"rounded-t",end:"rounded-b"}},"rounded-md":{horizontal:{start:"rounded-s-md",end:"rounded-e-md"},vertical:{start:"rounded-t-md",end:"rounded-b-md"}},"rounded-lg":{horizontal:{start:"rounded-s-lg",end:"rounded-e-lg"},vertical:{start:"rounded-t-lg",end:"rounded-b-lg"}},"rounded-xl":{horizontal:{start:"rounded-s-xl",end:"rounded-e-xl"},vertical:{start:"rounded-t-xl",end:"rounded-b-xl"}},"rounded-2xl":{horizontal:{start:"rounded-s-2xl",end:"rounded-e-2xl"},vertical:{start:"rounded-t-2xl",end:"rounded-b-2xl"}},"rounded-3xl":{horizontal:{start:"rounded-s-3xl",end:"rounded-e-3xl"},vertical:{start:"rounded-t-3xl",end:"rounded-b-3xl"}},"rounded-full":{horizontal:{start:"rounded-s-full",end:"rounded-e-full"},vertical:{start:"rounded-t-full",end:"rounded-b-full"}}}}),x=e({name:"ButtonGroup",inheritAttrs:!1,props:{size:{type:String,default:null,validator:e=>Object.keys(p.size).includes(e)},orientation:{type:String,default:"horizontal",validator:e=>["horizontal","vertical"].includes(e)},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})}},setup(e,{slots:n}){const{ui:l,attrs:c}=s("buttonGroup",d(e,"ui"),m),p=r((()=>o(n))),x=r((()=>a(u(l.value.wrapper[e.orientation],l.value.rounded,l.value.shadow),e.class))),v=r((()=>l.value.orientation[l.value.rounded][e.orientation]));return i({orientation:d(e,"orientation"),size:d(e,"size"),ui:l,rounded:v}),()=>t("div",{class:x.value,...c.value},p.value)}});export{x as default};
