import{Rol as o,PrismaClient as t}from"@prisma/client";import{d as e,g as r}from"../../../nitro/nitro.mjs";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const i=new t,a=e((async t=>{const e=r(t),a=parseInt(e.page)||1,s=parseInt(e.limit)||50,m=e.search||"",n={rol:o.DOCENTE,OR:[{nombre:{contains:m.toLocaleLowerCase()}},{correo:{contains:m.toLocaleLowerCase()}},{telefono:{contains:m.toLocaleLowerCase()}},{documentoIdentidad:{contains:m.toLocaleLowerCase()}}]},p=await i.usuario.count({where:n});return{users:await i.usuario.findMany({where:n,skip:(a-1)*s,take:s,select:{id:!0,documentoIdentidad:!0,nombre:!0,correo:!0,telefono:!0,rol:!0,contrasena:!0}}),total:p,page:a,totalPages:Math.ceil(p/s)}}));export{a as default};
//# sourceMappingURL=_users_.get.mjs.map
