import{d as o,r as t,c as r}from"../../../nitro/nitro.mjs";import{PrismaClient as e}from"@prisma/client";import*as i from"bcrypt";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const a=new e,s=o((async o=>{const e=await t(o),{id:s,nombre:m,correo:p,telefono:d,documentoIdentidad:n,contrasena:c}=e;if(!s)throw r({statusCode:400,statusMessage:"ID is required"});try{const o=c?await i.hash(c,10):void 0;return{message:"Usuario actualizado correctamente",user:await a.usuario.update({where:{id:s},data:{nombre:m,correo:p,telefono:d,documentoIdentidad:n,contrasena:o}})}}catch(o){throw r({statusCode:500,statusMessage:"Error al actualizar el usuario"})}}));export{s as default};
//# sourceMappingURL=_users_.put.mjs.map
