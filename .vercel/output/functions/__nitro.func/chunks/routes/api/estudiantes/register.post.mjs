import{PrismaClient as r}from"@prisma/client";import t from"bcryptjs";import{d as o,r as e}from"../../../nitro/nitro.mjs";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const a=new r,i=o((async r=>{try{const o=await e(r),{documentoIdentidad:i,nombre:s,carrera:n,correo:m,contrasena:d,enlaceRegistro:p}=o,c=await t.hash(d,10),u=await a.asignatura.findUnique({where:{enlaceRegistro:p}});if(!u)return console.error("Asignatura no encontrada"),{status:404,message:"Asignatura no encontrada"};const l=await a.estudiante.create({data:{documentoIdentidad:i,nombre:s,carrera:n,correo:m,contrasena:c,asignaturaId:u.id,usuarioId:1}});return console.log("Estudiante registrado:",l),{status:200,message:"Estudiante registrado exitosamente"}}catch(r){return console.error("Error registrando el estudiante:",r),{status:500,message:"Error interno del servidor"}}}));export{i as default};
//# sourceMappingURL=register.post.mjs.map
