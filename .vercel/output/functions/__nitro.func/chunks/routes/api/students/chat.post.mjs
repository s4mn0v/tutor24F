import{PrismaClient as e}from"@prisma/client";import{d as t,f as n,c as a,r as o,G as s}from"../../../nitro/nitro.mjs";import r from"jsonwebtoken";import i from"axios";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const c=new s(process.env.GEMINI_API_KEY||""),l=new e,u=new Map;async function getOrCreateStudentContext(e){if(u.has(e))return u.get(e);const t=await l.estudiante.findUnique({where:{id:e},select:{xp:!0,streak:!0,lastLoginDate:!0}});if(!t)throw new Error("Estudiante no encontrado");const n={messages:[],progress:[],xp:t.xp||0,streak:t.streak||0,lastLoginDate:t.lastLoginDate||new Date,conversationHistory:[]};return u.set(e,n),n}async function saveStudentContext(e,t){await l.estudiante.update({where:{id:e},data:{xp:t.xp,streak:t.streak,lastLoginDate:t.lastLoginDate}}),u.set(e,t)}async function retryWithExponentialBackoff(e,t=10,n=1e3){let a=0;for(;a<t;)try{return await e()}catch(e){if(!(429===e.status||e.response&&429===e.response.status||e.message.includes("Resource has been exhausted")))throw e;{const e=n*Math.pow(2,a);console.log(`Retrying after ${e}ms... (Attempt ${a+1}/${t})`),await new Promise((t=>setTimeout(t,e))),a++}}throw new Error(`Operation failed after ${t} retries`)}function generateDefaultTopics(e){return["Introducción a "+e,"Conceptos básicos de "+e,"Aplicaciones prácticas","Ejemplos y casos de estudio","Conclusiones y resumen"]}async function getMaterialesActualizados(e){const t=await l.material.findMany({where:{idAsignatura:e},orderBy:{creadoEn:"desc"},select:{id:!0,nombre:!0,tipo:!0,url:!0,creadoEn:!0,idAsignatura:!0}});return await Promise.all(t.map((async e=>{try{const t=await async function(e,t){return retryWithExponentialBackoff((async()=>{const n=c.getGenerativeModel({model:"gemini-pro"}),a=`\n      Analiza el siguiente documento y genera una lista de temas principales que se cubren en él.\n      Si el contenido no es claro o está vacío, genera temas específicos basados en el título del documento.\n\n      Título del documento: "${e}"\n      Contenido del documento: "${t}"\n\n      Instrucciones:\n      1. Identifica los conceptos clave y temas principales del documento\n      2. Si el contenido está vacío, infiere temas específicos basados en el título\n      3. Genera exactamente 5 temas principales y específicos\n      4. Asegúrate de que los temas sean relevantes para el estudio y aprendizaje\n\n      Responde SOLO con una lista de 5 temas específicos, uno por línea, sin numeración ni puntos.\n    `,o=(await n.generateContent(a)).response.text().trim().split("\n").filter((e=>""!==e.trim()));return{title:e,topics:5===o.length?o:generateDefaultTopics(e)}}))}(e.nombre,"");return{...e,topics:t.topics}}catch(t){return console.error(`Error analizando material ${e.id}:`,t),{...e,topics:generateDefaultTopics(e.nombre)}}})))}async function selectTopic(e,t){return retryWithExponentialBackoff((async()=>{const n=c.getGenerativeModel({model:"gemini-pro"}),a=`\n      Eres un tutor experto en el tema "${e}".\n      \n      Contenido del documento relacionado:\n      "${t}"\n\n      Instrucciones:\n      1. Analiza el contenido del documento proporcionado\n      2. Si el contenido es relevante para el tema "${e}", úsalo como base para tu explicación\n      3. Si el contenido no es relevante o está vacío, genera una explicación detallada basada en tu conocimiento experto sobre "${e}"\n      4. Da una breve introducción motivadora al tema\n      5. Explica los conceptos fundamentales de manera clara y concisa\n      6. Proporciona ejemplos prácticos relacionados con el tema\n      7. Haz 2-3 preguntas de comprensión para evaluar el entendimiento del estudiante\n      8. Anima al estudiante a hacer preguntas si tiene dudas\n      \n      Limita tu respuesta a aproximadamente 400-500 palabras.\n      NO menciones que estás generando contenido o que no tienes información específica.\n      Enfócate en proporcionar una explicación interactiva, comprensible y específica sobre el tema.\n    `;return(await n.generateContent(a)).response.text()}))}async function getRelatedVideo(e){try{const t=await i.get("https://www.googleapis.com/youtube/v3/search",{params:{part:"snippet",q:e+" educativo",type:"video",maxResults:1,key:process.env.YOUTUBE_API_KEY,relevanceLanguage:"es"}});if(t.data.items&&t.data.items.length>0){return`<iframe width="560" height="315" src="https://www.youtube.com/embed/${t.data.items[0].id.videoId}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>`}return""}catch(e){return console.error("Error al obtener video relacionado:",e),""}}const d=t((async e=>{var t;try{const s=null==(t=n(e).authorization)?void 0:t.split(" ")[1];if(!s)throw a({statusCode:401,message:"Acceso no autorizado"});let i;try{i=r.verify(s,process.env.JWT_SECRET||"fallback_secret")}catch(e){if(e instanceof r.TokenExpiredError)throw a({statusCode:401,message:"SESSION_EXPIRED"});throw e}const u=await l.estudiante.findFirst({where:{id:i.userId,asignaturaId:i.asignaturaId},include:{asignatura:!0,usuario:!0}});if(!u)throw a({statusCode:404,message:"Estudiante no encontrado"});const d=await getOrCreateStudentContext(i.userId),p=await o(e),{message:m,answer:g}=p;let f="",v=null,w=null,y=0,x=d.streak,h="";const E=await getMaterialesActualizados(i.asignaturaId);if(d.conversationHistory=d.conversationHistory.slice(-19),d.conversationHistory.push(`Usuario: ${m}`),"inicio"===m)f=`👋 ¡Bienvenido a tu asistente personal de estudio para ${u.asignatura.nombre}!\n\nEstoy aquí para ayudarte a prepararte para tus exámenes y evaluaciones. Podemos:\n\n📚 Estudiar cualquier tema en profundidad\n📝 Practicar con ejemplos reales\n💡 Resolver tus dudas específicas\n🎯 Evaluar tu comprensión con quizzes personalizados\n\nSelecciona un tema del panel izquierdo para comenzar una sesión de estudio. Te guiaré paso a paso y al final evaluaremos tu comprensión con un quiz personalizado.\n\n¿Listo para empezar? 💪`;else if(m.startsWith("STUDY_TOPIC:")){const e=m.replace("STUDY_TOPIC:","").trim();d.currentTopic=e;const t=E.find((t=>{var n;return null==(n=t.topics)?void 0:n.some((t=>t.toLowerCase()===e.toLowerCase()))}));if(t){f=await selectTopic(e,t.nombre),d.studySession={topic:e,startTime:new Date,concepts:[],examples:[]};const n=c.getGenerativeModel({model:"gemini-pro"}),a=`\n          Extrae los conceptos clave mencionados en esta explicación:\n          ${f}\n          \n          Responde solo con la lista de conceptos, uno por línea.\n        `,o=await n.generateContent(a);d.studySession.concepts=o.response.text().split("\n");const s=`\n          Extrae los ejemplos mencionados en esta explicación:\n          ${f}\n          \n          Responde solo con la lista de ejemplos, uno por línea.\n        `,r=await n.generateContent(s);d.studySession.examples=r.response.text().split("\n"),h=await getRelatedVideo(e),h&&(f+="\n\nAquí tienes un video relacionado con el tema:\n"+h)}else f=await selectTopic(e,"")}else if(m.toLowerCase().includes("video")||m.toLowerCase().includes("repasar"))d.currentTopic?(h=await getRelatedVideo(d.currentTopic),f=h?`Aquí tienes un video para repasar el tema "${d.currentTopic}":\n${h}`:`Lo siento, no pude encontrar un video adecuado para el tema "${d.currentTopic}".`):f="Primero necesitamos seleccionar un tema antes de buscar un video. ¿Qué tema te gustaría estudiar?";else if(m.toLowerCase().includes("quiz")||m.toLowerCase().includes("evaluar"))if(d.studySession){v={questions:await async function(e,t,n){return retryWithExponentialBackoff((async()=>{const a=c.getGenerativeModel({model:"gemini-pro"}),o=`\n      Como profesor experto, genera 4 preguntas diferentes para evaluar el aprendizaje sobre: ${e}\n\n      Conceptos estudiados:\n      ${t.join("\n")}\n\n      Ejemplos revisados:\n      ${n.join("\n")}\n\n      Genera 4 preguntas diferentes de selección múltiple que evalúen la comprensión de los conceptos y ejemplos estudiados.\n      \n      Responde en formato JSON:\n      {\n        "questions": [\n          {\n            "question": "Primera pregunta",\n            "options": ["A) opción 1", "B) opción 2", "C) opción 3", "D) opción 4"],\n            "correctAnswer": "A",\n            "explanation": "Explicación detallada"\n          },\n          // ... (3 preguntas más)\n        ]\n      }\n    `,s=await a.generateContent(o);return JSON.parse(s.response.text()).questions}))}(d.studySession.topic,d.studySession.concepts,d.studySession.examples),currentQuestion:0},f="¡Excelente sesión de estudio! Vamos a evaluar tu comprensión con estas preguntas. Responde con la letra de la opción que consideres correcta (A, B, C o D):"}else f="Primero necesitamos estudiar un tema antes de hacer el quiz. ¿Qué tema te gustaría estudiar?";else if(g&&v){const e=await async function(e,t){const n=t.toUpperCase()===e.correctAnswer;return{isCorrect:n,feedback:n?`¡Excelente! 🎉 Recuerda: ${e.explanation}`:`La respuesta correcta es ${e.correctAnswer}. ${e.explanation}`}}(v.questions[v.currentQuestion],g);w=e,f=e.feedback;const t=await async function(e,t,n){const a=await getOrCreateStudentContext(e),o=new Date,s=a.progress.findIndex((e=>e.topic===t));if(-1===s)a.progress.push({topic:t,lastReviewed:o,masteryLevel:n?1:0});else{const e=a.progress[s];e.lastReviewed=o,e.masteryLevel=Math.max(0,Math.min(5,e.masteryLevel+(n?1:-1)))}const r=n?100*Math.floor(5*Math.random())+100:0;a.xp+=r;const i=a.lastLoginDate,c=new Date;return c.toDateString()!==i.toDateString()&&((c.getTime()-i.getTime())/864e5<=1?a.streak+=1:a.streak=1,a.lastLoginDate=c),await saveStudentContext(e,a),{xpGained:r,newStreak:a.streak}}(i.userId,d.currentTopic||"Tema general",e.isCorrect);y=t.xpGained,x=t.newStreak,v.currentQuestion++,v.currentQuestion>=v.questions.length&&(v=null)}else{const e=c.getGenerativeModel({model:"gemini-pro"}),t=`\n        Eres un tutor virtual especializado en ${u.asignatura.nombre}.\n        \n        Contexto actual:\n        - Tema: ${d.currentTopic||"General"}\n        - Últimos mensajes: ${d.messages.slice(-3).join("\n")}\n        \n        Mensaje del estudiante: "${m}"\n        \n        Instrucciones:\n        1. Responde de manera clara y didáctica\n        2. Si el estudiante hace una pregunta, explica con ejemplos\n        3. Si detectas confusión, ofrece una explicación alternativa\n        4. Mantén un tono motivador y positivo\n        \n        NO menciones el quiz final.\n        Enfócate en ayudar al estudiante a comprender el tema.\n      `;f=(await e.generateContent(t)).response.text(),d.studySession&&f.toLowerCase().includes("ejemplo")&&d.studySession.examples.push(f)}d.messages.push(`Usuario: ${m}`),d.messages.push(`Asistente: ${f}`),d.messages.length>40&&(d.messages=d.messages.slice(-40)),d.conversationHistory.push(`Asistente: ${f}`),d.conversationHistory.length>20&&(d.conversationHistory=d.conversationHistory.slice(-20)),await saveStudentContext(i.userId,d);const C=await getMaterialesActualizados(i.asignaturaId);return{text:f,quiz:v,answerFeedback:w,currentTopic:d.currentTopic,videoEmbed:h,estudiante:{nombre:u.nombre,nivel:Math.floor(d.xp/1e3)+1},documents:C.map((e=>({id:e.id,title:e.nombre,topics:e.topics||[],type:e.tipo,url:e.url}))),topics:d.progress.map((e=>({name:e.topic,progress:20*e.masteryLevel,completed:5===e.masteryLevel,inProgress:e.masteryLevel>0&&e.masteryLevel<5}))),xp:d.xp,xpGained:y,streak:x,conversationHistory:d.conversationHistory}}catch(e){if(console.error("Error detallado:",e),e instanceof Error){const t=e.statusCode||500,n="SESSION_EXPIRED"===e.message?"Tu sesión ha expirado. Por favor, vuelve a iniciar sesión.":`Error al procesar tu solicitud: ${e.message}`;if(429===e.status)return{text:"Lo siento, el sistema está experimentando una alta demanda en este momento. Por favor, intenta de nuevo en unos minutos.",documents:[],topics:[]};throw a({statusCode:t,message:n})}throw a({statusCode:500,message:"Error desconocido al procesar tu solicitud"})}}));export{d as default};
//# sourceMappingURL=chat.post.mjs.map
