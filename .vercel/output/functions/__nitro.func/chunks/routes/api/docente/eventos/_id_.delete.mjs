import{PrismaClient as o}from"@prisma/client";import{d as t,c as e}from"../../../../nitro/nitro.mjs";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const r=new o,i=t((async o=>{var t;try{const i=null==(t=o.context.params)?void 0:t.id;if(!i)throw e({statusCode:400,message:"ID de evento no proporcionado"});const a=parseInt(i),s=await r.recordatorio.findUnique({where:{id:a},include:{asignatura:!0}});if(!s)throw e({statusCode:404,message:"Evento no encontrado"});if(!await r.asignatura.findUnique({where:{id:s.asignaturaId},include:{docente:!0}}))throw e({statusCode:404,message:"Asignatura no encontrada"});return await r.recordatorio.delete({where:{id:a}}),{success:!0,message:"Evento eliminado correctamente"}}catch(o){throw console.error("Error al eliminar el evento:",o),e({statusCode:o.statusCode||500,message:o.message||"Error al eliminar el evento"})}}));export{i as default};
//# sourceMappingURL=_id_.delete.mjs.map
