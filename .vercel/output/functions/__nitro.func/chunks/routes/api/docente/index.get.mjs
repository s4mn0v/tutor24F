import{Rol as t,PrismaClient as e}from"@prisma/client";import{d as o,e as r,c as a}from"../../../nitro/nitro.mjs";import i from"jsonwebtoken";import"mammoth";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const s=new e,n=o((async e=>{try{const o=r(e,"authorization");if(!o||!o.startsWith("Bearer "))throw a({statusCode:401,message:"Acceso no autorizado"});const n=o.split(" ")[1];let c;try{c=i.verify(n,process.env.JWT_SECRET)}catch(t){throw a({statusCode:401,message:"Token invÃ¡lido"})}let d={},m={};if(c.role===t.DOCENTE){const t=await s.asignatura.findMany({where:{idDocente:c.userId},select:{id:!0}});d={asignaturaId:{in:t.map((t=>t.id))}},m={idDocente:c.userId}}const p=await s.recordatorio.findMany({where:d,include:{asignatura:{select:{id:!0,nombre:!0}}},orderBy:{fecha:"asc"}}),l=await s.asignatura.findMany({where:m,select:{id:!0,nombre:!0}});return{eventos:p.map((t=>({id:t.id,title:t.titulo,date:t.fecha.toISOString(),description:t.descripcion,importance:t.importancia,asignatura:t.asignatura}))),asignaturas:l}}catch(t){throw console.error("Error:",t),a({statusCode:500,message:"Error al obtener los datos"})}}));export{n as default};
//# sourceMappingURL=index.get.mjs.map
