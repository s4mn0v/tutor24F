import{Rol as t,PrismaClient as o}from"@prisma/client";import{d as r,e as i,c as e}from"../../../nitro/nitro.mjs";import a from"jsonwebtoken";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const s=new o,n=r((async o=>{try{const r=i(o,"authorization");if(!r||!r.startsWith("Bearer "))throw e({statusCode:401,message:"Acceso no autorizado"});const n=r.split(" ")[1];let m;try{m=a.verify(n,process.env.JWT_SECRET)}catch(t){throw e({statusCode:401,message:"Token invÃ¡lido"})}let d={},p={};if(m.role===t.DOCENTE){const t=await s.asignatura.findMany({where:{idDocente:m.userId},select:{id:!0}});d={asignaturaId:{in:t.map((t=>t.id))}},p={idDocente:m.userId}}const c=await s.recordatorio.findMany({where:d,include:{asignatura:{select:{id:!0,nombre:!0}}},orderBy:{fecha:"asc"}}),l=await s.asignatura.findMany({where:p,select:{id:!0,nombre:!0}});return{eventos:c.map((t=>({id:t.id,title:t.titulo,date:t.fecha.toISOString(),description:t.descripcion,importance:t.importancia,asignatura:t.asignatura}))),asignaturas:l}}catch(t){throw console.error("Error:",t),e({statusCode:500,message:"Error al obtener los datos"})}}));export{n as default};
//# sourceMappingURL=index.get.mjs.map
