import{PrismaClient as t}from"@prisma/client";import{d as r,r as o,c as s,b as a}from"../../../nitro/nitro.mjs";import e from"jsonwebtoken";import"mammoth";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const i=new t,n=r((async t=>{const r=await o(t);console.log("Datos recibidos:",r);const{nombre:n,carrera:c,jornada:d}=r||{};if(!n||!c||!d)throw s({statusCode:400,statusMessage:"Faltan campos requeridos"});const u=a(t,"Authorization");if(!u||!u.startsWith("Bearer "))throw s({statusCode:401,statusMessage:"Acceso no autorizado"});const m=u.split(" ")[1];let l;try{l=e.verify(m,process.env.JWT_SECRET||"fallback_secret")}catch(t){if("TokenExpiredError"===t.name)throw s({statusCode:401,statusMessage:"Token expirado"});if("JsonWebTokenError"===t.name)throw s({statusCode:401,statusMessage:"Token inv√°lido"});throw s({statusCode:500,statusMessage:"Error interno del servidor"})}const p=l.userId;if("DOCENTE"!==l.role)throw s({statusCode:403,statusMessage:"Solo los docentes pueden crear asignaturas"});try{return await i.asignatura.create({data:{nombre:n,carrera:c,jornada:d,idDocente:p,activo:!0}})}catch(t){throw console.error("Error al crear la asignatura:",t),s({statusCode:500,statusMessage:"Error al crear la asignatura"})}}));export{n as default};
//# sourceMappingURL=create.post.mjs.map
