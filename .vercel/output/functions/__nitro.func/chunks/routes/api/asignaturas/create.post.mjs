import{PrismaClient as o}from"@prisma/client";import{d as t,r,c as s,b as e}from"../../../nitro/nitro.mjs";import a from"jsonwebtoken";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const i=new o,n=t((async o=>{const t=await r(o);console.log("Datos recibidos:",t);const{nombre:n,carrera:m,jornada:c}=t||{};if(!n||!m||!c)throw s({statusCode:400,statusMessage:"Faltan campos requeridos"});const d=e(o,"Authorization");if(!d||!d.startsWith("Bearer "))throw s({statusCode:401,statusMessage:"Acceso no autorizado"});const p=d.split(" ")[1];let l;try{l=a.verify(p,process.env.JWT_SECRET||"fallback_secret")}catch(o){if("TokenExpiredError"===o.name)throw s({statusCode:401,statusMessage:"Token expirado"});if("JsonWebTokenError"===o.name)throw s({statusCode:401,statusMessage:"Token inv√°lido"});throw s({statusCode:500,statusMessage:"Error interno del servidor"})}const u=l.userId;if("DOCENTE"!==l.role)throw s({statusCode:403,statusMessage:"Solo los docentes pueden crear asignaturas"});try{return await i.asignatura.create({data:{nombre:n,carrera:m,jornada:c,idDocente:u,activo:!0}})}catch(o){throw console.error("Error al crear la asignatura:",o),s({statusCode:500,statusMessage:"Error al crear la asignatura"})}}));export{n as default};
//# sourceMappingURL=create.post.mjs.map
