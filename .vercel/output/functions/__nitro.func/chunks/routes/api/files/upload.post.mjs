import{d as r,c as i}from"../../../nitro/nitro.mjs";import{PrismaClient as e}from"@prisma/client";import{createClient as t}from"@supabase/supabase-js";import o from"formidable";import a from"fs/promises";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const s=t(process.env.SUPABASE_URL,process.env.SUPABASE_KEY),m=new e,p=r((async r=>{try{const e=o({multiples:!1}),{fields:t,files:p}=await new Promise(((i,t)=>{e.parse(r.node.req,((r,e,o)=>{r&&t(r),i({fields:e,files:o})}))}));if(!p.file)throw i({statusCode:400,message:"No se recibió ningún archivo."});const l=parseInt(Array.isArray(t.idAsignatura)?t.idAsignatura[0]:t.idAsignatura||"0");if(isNaN(l))throw i({statusCode:400,message:"El ID de la asignatura no es válido."});if(!await m.asignatura.findUnique({where:{id:l}}))throw i({statusCode:404,message:"La asignatura no existe."});const n=Array.isArray(p.file)?p.file[0]:p.file,d=await a.readFile(n.filepath),{data:u,error:c}=await s.storage.from("files").upload(n.originalFilename,d,{contentType:n.mimetype,upsert:!0});if(c)throw i({statusCode:500,message:"Error al subir el archivo a Supabase."});const{data:f}=s.storage.from("files").getPublicUrl(u.path),g=f.publicUrl;return await m.material.create({data:{nombre:n.originalFilename||"Archivo",tipo:n.mimetype||"application/octet-stream",url:g,idAsignatura:l}}),{success:!0}}catch(r){throw console.error(r),i({statusCode:500,message:"Error interno del servidor."})}}));export{p as default};
//# sourceMappingURL=upload.post.mjs.map
