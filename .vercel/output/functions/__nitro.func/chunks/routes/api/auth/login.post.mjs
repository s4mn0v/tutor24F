import{PrismaClient as r}from"@prisma/client";import e from"bcryptjs";import t from"jsonwebtoken";import{d as o,r as s,c as i}from"../../../nitro/nitro.mjs";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";const a=new r,n=o((async r=>{const o=await s(r),{email:n,password:m}=o;try{const r=await a.usuario.findUnique({where:{correo:n},select:{id:!0,contrasena:!0,rol:!0}});if(r){if(!await e.compare(m,r.contrasena))return i({statusCode:401,message:"Invalid credentials"});return{token:t.sign({userId:r.id,role:r.rol},process.env.JWT_SECRET||"fallback_secret",{expiresIn:"1h"}),role:r.rol,userId:r.id}}const o=await a.estudiante.findUnique({where:{correo:n},select:{id:!0,contrasena:!0,asignaturaId:!0}});if(o){if(!await e.compare(m,o.contrasena))return i({statusCode:401,message:"Invalid credentials"});return{token:t.sign({userId:o.id,role:"ESTUDIANTE",asignaturaId:o.asignaturaId},process.env.JWT_SECRET||"fallback_secret",{expiresIn:"1h"}),role:"ESTUDIANTE",asignaturaId:o.asignaturaId,userId:o.id}}return i({statusCode:401,message:"Invalid credentials"})}catch(r){return console.error("Login error:",r),i({statusCode:500,message:"Internal server error"})}}));export{n as default};
//# sourceMappingURL=login.post.mjs.map
