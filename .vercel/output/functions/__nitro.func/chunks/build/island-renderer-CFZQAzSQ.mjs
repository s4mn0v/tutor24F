import{defineComponent as t,createVNode as o,onErrorCaptured as r}from"vue";import{i as e,c as i}from"./entry-B1wW15I9.mjs";import"../nitro/nitro.mjs";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";import"unhead";import"@unhead/shared";import"vue-router";import"@prisma/client";import"@vueuse/core";import"tailwind-merge";import"@iconify/vue";import"vue3-apexcharts";import"vue/server-renderer";const m={},p=t({name:"IslandRenderer",props:{context:{type:Object,required:!0}},setup(t){const p=e();p.headEntries().splice(0,p.headEntries().length);const s=m[t.context.name];if(!s)throw i({statusCode:404,statusMessage:`Island component not found: ${t.context.name}`});return r((t=>{})),()=>o(s||"span",{...t.context.props,"data-island-uid":""})}});export{p as default};
//# sourceMappingURL=island-renderer-CFZQAzSQ.mjs.map
