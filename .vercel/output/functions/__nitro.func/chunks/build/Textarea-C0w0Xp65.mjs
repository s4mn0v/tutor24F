import{mergeProps as e,defineComponent as t,toRef as a,ref as r,watch as l,nextTick as o,computed as u,useSSRContext as i}from"vue";import{twJoin as s}from"tailwind-merge";import{v as d}from"../nitro/nitro.mjs";import{s as n,c as m}from"./tooltip-P8fr8pDa.mjs";import{i as p}from"./useFormGroup-Dj1FOV-7.mjs";import{_ as v,m as c,g as f,t as y,l as b}from"./entry-B1wW15I9.mjs";import{ssrRenderAttrs as g,ssrInterpolate as x,ssrRenderSlot as h}from"vue/server-renderer";import"underscore";import"bluebird/js/release/promise";import"base64-js";import"jszip";import"@xmldom/xmldom";import"@xmldom/xmldom/lib/dom";import"xmlbuilder";import"dingbat-to-unicode";import"fs";import"url";import"os";import"path";import"path-is-absolute";import"pdf.js-extract";import"node:http";import"node:https";import"@vercel/kv";import"@iconify/utils";import"consola/core";import"@vueuse/core";import"unhead";import"@unhead/shared";import"vue-router";import"@prisma/client";import"@iconify/vue";import"vue3-apexcharts";const j=c(f.ui.strategy,f.ui.textarea,m),w=t({inheritAttrs:!1,props:{modelValue:{type:[String,Number],default:""},id:{type:String,default:null},name:{type:String,default:null},placeholder:{type:String,default:null},required:{type:Boolean,default:!1},disabled:{type:Boolean,default:!1},rows:{type:Number,default:3},maxrows:{type:Number,default:0},autoresize:{type:Boolean,default:!1},autofocus:{type:Boolean,default:!1},autofocusDelay:{type:Number,default:100},resize:{type:Boolean,default:!1},padded:{type:Boolean,default:!0},size:{type:String,default:null,validator:e=>Object.keys(j.size).includes(e)},color:{type:String,default:()=>j.default.color,validator:e=>[...f.ui.colors,...Object.keys(j.color)].includes(e)},variant:{type:String,default:()=>j.default.variant,validator:e=>[...Object.keys(j.variant),...Object.values(j.color).flatMap((e=>Object.keys(e)))].includes(e)},textareaClass:{type:String,default:null},class:{type:[String,Object,Array],default:()=>""},ui:{type:Object,default:()=>({})},modelModifiers:{type:Object,default:()=>({})}},emits:["update:modelValue","blur","change"],setup(e,{emit:t}){const{ui:i,attrs:m}=n("textarea",a(e,"ui"),j,a(e,"class")),{emitFormBlur:v,emitFormInput:c,inputId:f,color:g,size:x,name:h}=p(e,j),w=r(d({},e.modelModifiers,{trim:!1,lazy:!1,number:!1,nullify:!1})),z=r(null),S2=()=>{if(e.autoresize){if(!z.value)return;z.value.rows=e.rows;const t=z.value.style.overflow;z.value.style.overflow="hidden";const a=(void 0).getComputedStyle(z.value),r=Number.parseInt(a.paddingTop)+Number.parseInt(a.paddingBottom),l=Number.parseInt(a.lineHeight),{scrollHeight:o}=z.value,u=(o-r)/l;u>e.rows&&(z.value.rows=e.maxrows?Math.min(u,e.maxrows):u),z.value.style.overflow=t}},B=e=>{w.value.trim&&(e=e.trim()),w.value.number&&(e=b(e)),w.value.nullify&&(e||(e=null)),t("update:modelValue",e),c()};l((()=>e.modelValue),(()=>{o(S2)}));const S=u((()=>{var t,a;const r=(null==(a=null==(t=i.value.color)?void 0:t[g.value])?void 0:a[e.variant])||i.value.variant[e.variant];return y(s(i.value.base,i.value.form,i.value.rounded,i.value.placeholder,i.value.size[x.value],e.padded?i.value.padding[x.value]:"p-0",null==r?void 0:r.replaceAll("{color}",g.value),!e.resize&&"resize-none"),e.textareaClass)}));return{ui:i,attrs:m,name:h,inputId:f,textarea:z,textareaClass:S,onInput:e=>{S2(),w.value.lazy||B(e.target.value)},onChange:e=>{const a=e.target.value;t("change",a),w.value.lazy&&B(a),w.value.trim&&(e.target.value=a.trim())},onBlur:e=>{t("blur",e),v()}}}}),z=w.setup;w.setup=(e,t)=>{const a=i();return(a.modules||(a.modules=new Set)).add("node_modules/@nuxt/ui/dist/runtime/components/forms/Textarea.vue"),z?z(e,t):void 0};const S=v(w,[["ssrRender",function(t,a,r,l,o,u,i,s){let d;a(`<div${g(e({class:t.ui.wrapper},l))}><textarea${g(d=e({id:t.inputId,ref:"textarea",value:t.modelValue,name:t.name,rows:t.rows,required:t.required,disabled:t.disabled,placeholder:t.placeholder,class:t.textareaClass},t.attrs),"textarea")}>${x("value"in d?d.value:"")}</textarea>`),h(t.$slots,"default",{},null,a,r),a("</div>")}]]);export{S as default};
//# sourceMappingURL=Textarea-C0w0Xp65.mjs.map
